<?php

/**
 * PluginsfGuardConfirm
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    sfDoctrineGuardConfirmPlugin
 * @subpackage model
 * @author     Daniel Ancuta <whisller@gmail.com>
 */
abstract class PluginsfGuardConfirm extends BasesfGuardConfirm
{
    /**
     * Default name what can be use when user want confirm registration
     *
     * @var    String
     * @author Daniel Ancuta <whisller@gmail.com>
     */
    const KIND_REGISTER     = 'register';

    /**
     * Default name what can be use when user want confirm change mail
     *
     * @var    String
     * @author Daniel Ancuta <whisller@gmail.com>
     */
    const KIND_CHANGE_EMAIL = 'change_email';

    /**
     * @see    Doctrine_Record::preInsert()
     *
     * @author Daniel Ancuta <whisller@gmail.com>
     */
    public function preInsert($event)
    {
        parent::preInsert($event);

        // setup hash for this object
        $this->setHash(sha1(mt_rand(5,15).microtime().uniqid().microtime().mt_rand(5,15)));
    }

    /**
     * Serialize the data that will be stored in confirmation.
     *
     * You can use it to store data that will be used after confirmation will be finished e.g. for change email - you store new email and use i to update user object.
     *
     * @param  Mixed $data
     *
     * @author Daniel Ancuta <whisller@gmail.com>
     */
    public function setConfirmData($data)
    {
        $this->_set('confirm_data', serialize($data));
    }

    /**
     * Return serialized data as unserialized array
     *
     * @return Array
     *
     * @author Daniel Ancuta <whisller@gmail.com>
     */
    public function getConfirmDataAsArray()
    {
        return unserialize($this->getConfirmData());
    }
}